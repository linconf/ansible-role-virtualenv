---

# On OSX, may need to run the following so docker containers are reachable:
# sudo /sbin/route -n add -net 172.17.0.0 -netmask 255.255.0.0 -gateway $(docker-machine ip virtualbox)

- name: setup docker containers
  include: setup.yml

- name: setup for tests
  hosts: docker_containers
  vars:
    test_path: "~/test_venv"
    virtualenv_path: "{{test_path}}/env"
  tasks:
    - name: make sure sudo is installed
      action:
        module: '{{ansible_pkg_mgr}}'
        name: sudo
        state: present
    - name: remove virtualenv path
      file:
        path: "{{virtualenv_path}}"
        state: absent
    - name: create test directory
      file:
        path: "{{test_path}}"
        state: directory
    - name: create test requirements file
      copy:
        content: |
          decorator
          requests
        dest: "{{test_path}}/requirements.txt"
    - name: create admin user to test become capabilities
      user:
        name: admin
        createhome: true
        home: ~admin
        password: '$6$8yuM3YVsSYTjtPr$b742a/sSdpKpyuC9J7L2fHRrV1pUtHeJuUj6KrjQ7UsHRrT8ffvqnoUutJLVqIArHnm3/0GtF5DH5hnLn8rJo1'
        groups: '{% if ansible_os_family == "RedHat" %}wheel{% else %}sudo{% endif %}'
    - name: make sure admin can sudo for centos
      copy:
        content: '%wheel ALL=(ALL) NOPASSWD: ALL'
        dest: /etc/sudoers.d/sudo_wheel
        mode: 0440
        owner: root
        group: root
      when: inventory_hostname|search('_centos')
    - name: create venv user to test become capabilities
      user:
        name: venv
        createhome: true
        home: ~venv
        password: '$6$8yuM3YVsSYTjtPr$b742a/sSdpKpyuC9J7L2fHRrV1pUtHeJuUj6KrjQ7UsHRrT8ffvqnoUutJLVqIArHnm3/0GtF5DH5hnLn8rJo1'

- name: test running as root user
  hosts: docker_containers
  gather_facts: false
  vars:
    test_path: "~/test_venv"
    virtualenv_path: "{{test_path}}/env"
  roles:
    - role: cchurch.virtualenv
      virtualenv_notify_on_updated: "virtualenv handler created"
    - role: cchurch.virtualenv
      virtualenv_notify_on_updated: "virtualenv handler no change"
    - role: cchurch.virtualenv
      virtualenv_notify_on_updated: "virtualenv handler recreated"
      virtualenv_recreate: true
    - role: cchurch.virtualenv
      virtualenv_pre_packages:
        - pytz
      virtualenv_notify_on_updated: "virtualenv handler pre packages"
    - role: cchurch.virtualenv
      virtualenv_pre_packages:
        - name: pytz
          version: "2014.4"
      virtualenv_notify_on_updated: "virtualenv handler pre packages downgrade"
    - role: cchurch.virtualenv
      virtualenv_requirements:
        - "{{test_path}}/requirements.txt"
      virtualenv_notify_on_updated: "virtualenv handler requirements"
    - role: cchurch.virtualenv
      virtualenv_post_packages:
        - name: pytz
          state: absent
      virtualenv_notify_on_updated: "virtualenv handler post packages"
    - role: cchurch.virtualenv
      virtualenv_notify_on_updated: "virtualenv handler created with become"
      virtualenv_user: venv
      virtualenv_path: ~venv/test_env
    - role: cchurch.virtualenv
      virtualenv_notify_on_updated: "virtualenv handler no change with become"
      virtualenv_user: venv
      virtualenv_path: ~venv/test_env
  handlers:
    - name: virtualenv handler created
      set_fact:
        virtualenv_notified_created: true
      changed_when: true
      notify:
        - foo handler
        - bar handler
    - name: foo handler
      set_fact:
        foo_notified: true
    - name: bar handler
      set_fact:
        bar_notified: true
    - name: virtualenv handler no change
      set_fact:
        virtualenv_notified_no_change: true
    - name: virtualenv handler recreated
      set_fact:
        virtualenv_notified_recreated: true
    - name: virtualenv handler pre packages
      set_fact:
        virtualenv_notified_pre_packages: true
    - name: virtualenv handler pre packages downgrade
      set_fact:
        virtualenv_notified_pre_packages_downgrade: true
    - name: virtualenv handler requirements
      set_fact:
        virtualenv_notified_requirements: true
    - name: virtualenv handler post packages
      set_fact:
        virtualenv_notified_post_packages: true
    - name: virtualenv handler created with become
      set_fact:
        virtualenv_notified_created_with_become: true
    - name: virtualenv handler no change with become
      set_fact:
        virtualenv_notified_no_change_with_become: true

- name: check that role ran as expected as root
  hosts: docker_containers
  tasks:
    - name: assert that appropriate handlers were notified
      assert:
        that:
          - virtualenv_notified_created
          - foo_notified
          - bar_notified
          - virtualenv_notified_no_change is not defined
          - virtualenv_notified_recreated
          - virtualenv_notified_pre_packages
          - virtualenv_notified_pre_packages_downgrade
          - virtualenv_notified_requirements
          - virtualenv_notified_post_packages
          - virtualenv_notified_created_with_become
          - virtualenv_notified_no_change_with_become is not defined
    - name: check that root virtualenv was created
      stat:
        path: '~/test_venv/env/bin/python'
      register: virtualenv_root_stat_result
      failed_when: 'not virtualenv_root_stat_result.stat.exists or virtualenv_root_stat_result.stat.pw_name != ansible_ssh_user'
    - name: check that venv virtualenv was created
      stat:
        path: '~venv/test_env/bin/python'
      register: virtualenv_venv_stat_result
      failed_when: 'not virtualenv_venv_stat_result.stat.exists or virtualenv_venv_stat_result.stat.pw_name != "venv"'

- name: test running as admin user with become enabled
  hosts: docker_containers
  gather_facts: false
  become: true
  vars:
    virtualenv_path: "~/test_venv2a"
    ansible_ssh_user: admin
    ansible_ssh_pass: testpass
    ansible_become_pass: testpass
    ansible_sudo_pass: testpass
  roles:
    - role: cchurch.virtualenv
      virtualenv_notify_on_updated: "virtualenv handler created by admin"
      virtualenv_os_packages:
        - cowsay
    - role: cchurch.virtualenv
      virtualenv_notify_on_updated: "virtualenv handler created by admin with become"
      virtualenv_user: venv
      virtualenv_path: ~venv/test_env2b
  handlers:
    - name: virtualenv handler created by admin
      set_fact:
        virtualenv_notified_created_by_admin: true
    - name: virtualenv handler created by admin with become
      set_fact:
        virtualenv_notified_created_by_admin_with_become: true

- name: check that role ran as expected as admin
  hosts: docker_containers
  tasks:
    - name: assert that appropriate handlers were notified
      assert:
        that:
          - virtualenv_notified_created_by_admin
          - virtualenv_notified_created_by_admin_with_become
    - name: check that admin virtualenv was created
      stat:
        path: '~admin/test_venv2a/bin/python'
      register: virtualenv_admin_stat_result
      failed_when: 'not virtualenv_admin_stat_result.stat.exists or virtualenv_admin_stat_result.stat.pw_name != "admin"'
    - name: check that venv virtualenv was created
      stat:
        path: '~venv/test_env2b/bin/python'
      register: virtualenv_venv_stat_result
      failed_when: 'not virtualenv_venv_stat_result.stat.exists or virtualenv_venv_stat_result.stat.pw_name != "venv"'

- name: test running as venv user
  hosts: docker_containers
  gather_facts: false
  vars:
    virtualenv_path: "~/test_venv3"
    ansible_ssh_user: venv
    ansible_ssh_pass: testpass
  roles:
    - role: cchurch.virtualenv
      virtualenv_notify_on_updated: "virtualenv handler created by venv"
  handlers:
    - name: virtualenv handler created by venv
      set_fact:
        virtualenv_notified_created_by_venv: true

- name: check that role ran as expected as venv
  hosts: docker_containers
  tasks:
    - name: assert that appropriate handlers were notified
      assert:
        that:
          - virtualenv_notified_created_by_venv
    - name: check that venv virtualenv was created
      stat:
        path: '~venv/test_venv3/bin/python'
      register: virtualenv_venv_stat_result
      failed_when: 'not virtualenv_venv_stat_result.stat.exists or virtualenv_venv_stat_result.stat.pw_name != "venv"'

- name: cleanup docker containers
  include: cleanup.yml
